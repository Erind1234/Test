@model InApps.Models.EmpModel

<!DOCTYPE html>
<html>
<head>
    <!-- ... your existing head content ... -->
    <style>
        /* Add CSS styles for centering the content */
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

        .form-group {
            display: flex;
            align-items: center;
        }

        .search-group {
            display: flex;
            align-items: center;
        }

        .search-box {
            width: 300px;
        }

        /* Add other CSS styles as needed */

        /* Add CSS styles for the freezing search box */
        .freeze-search-box {
            position: absolute;
            top: 0;
            left: 0;
            background-color: white;
            z-index: 1;
        }

        /* Add CSS styles for the table container */
        .table-container {
            margin-top: 20px;
            margin-left: 350px; /* Adjust the margin-left as needed */
            width: calc(100% - 350px); /* Adjust the width as needed */
        }

        /* Add CSS styles for freezing the table */
        .fixed-table {
            position: fixed;
            top: 80px; /* Adjust the top position as needed */
            left: 100px; /* Adjust the left position as needed */
            width: calc(100% - 250px); /* Adjust the width as needed */
            max-height: 400px; /* Adjust the max-height as needed */
            overflow-y: auto; /* Enable vertical scrolling if needed */
            z-index: 1;
        }

        /* Add CSS styles for the popup */
        .popup {
            /* ... your existing popup styles ... */
            z-index: 2;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="search-group">
            @using (Html.BeginForm("Index", "Fiscalization", FormMethod.Post))
            {
                <div class="form-group">
                    <input type="text" name="searchBox" class="form-control search-box" placeholder="Klikoni per te skanuar:" />
                    <button type="submit" class="btn btn-primary ml-2">Scan</button>
                </div>
            }
            <div class="freeze-search-box" id="freezeSearchBox" style="display: none;"></div>
        </div>

        <!-- Add a wrapper for the fixed table -->
        <div class="table-wrapper">
            <div id="resultTable" class="table-container" style="display: none;">
                <!-- Table content will be displayed here -->
                <table>
                    <tr>
                        <td>&nbsp;</td>
                    </tr>
                    <tr>
                        <td>&nbsp;</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("Numri Urdhrit")</td>
                        <td>@Html.TextBox("PYMTORDNUM")</td>
                        <td>@Html.Label("Invoice Date:")</td>
                        <td>@Html.TextBoxFor(model => model.INVOICEDATE, new { @Value = ViewBag.p4 })</td>
                    </tr>

                    <tr>
                        <td>@Html.LabelFor(model => model.NIVF)</td>
                        <td>@Html.TextBoxFor(model => model.NIVF, new { @Value = ViewBag.p3, style = "width:400px;" })</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("NIPT Bleres:")</td>
                        <td>@Html.TextBox("PAYERNIPT")</td>
                        <td>@Html.LabelFor(model => model.SELLERNIPT)</td>
                        <td>@Html.TextBoxFor(model => model.SELLERNIPT, new { @Value = ViewBag.p1 })</td>
                    </tr>
                    <tr>
                        <td>@Html.Label("Emri Shites")</td>
                        <td>@Html.TextBoxFor(model => model.TRANSACTIONCODE, new { @Value = ViewBag.p2, style = "width:400px;" })</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("Referenca e Teller:")</td>
                        <td>@Html.TextBox("REFCODE")</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("Tipi i Pageses:")</td>
                        <td>
                            @Html.DropDownListFor(model => model.PYMTTYPE, new SelectList(new[]
                            {
                                new { Value = "CASH", Text = "CASH" },
                                new { Value = "NON_CASH", Text = "NON_CASH" }
                            }, "Value", "Text"), "CASH")
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.Label("Statusi i Pageses:")</td>
                        <td>
                            @Html.DropDownListFor(model => model.PYMTSTATUS, new SelectList(new[]
                            {
                                new { Value = "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate", Text = "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate" },
                                new { Value = "P2 Faturimi i dergesave te mallrave dhe sherbimeve bazuar ne nje kontrate", Text = "P2 Faturimi i dergesave te mallrave dhe sherbimeve bazuar ne nje kontrate" },
                                new { Value = "P3 Faturimi i dorezimit te porosise se blerjes se  rastesishme", Text = "P3 Faturimi i dorezimit te porosise se blerjes se  rastesishme" },
                                new { Value = "P4 Pagesa paraprake", Text = "P4 Pagesa paraprake" },
                                new { Value = "P5 Pagesa ne vend", Text = "P5 Pagesa ne vend" },
                                new { Value = "P6 Pagesa para dorezimit", Text = "P6 Pagesa para dorezimit" },
                                new { Value = "P7 Faturat me referenca ne shenimin e dergimit", Text = "P7 Faturat me referenca ne shenimin e dergimit" },
                                new { Value = "P8 Faturat me referenca ne shenimin e dergimit dhe shenimin e marrjes", Text = "P8 Faturat me referenca ne shenimin e dergimit dhe shenimin e marrjes" },
                                new { Value = "P9 Note kredie ose fatura me shuma negative, te leshuara per nje sere arsyesh,perfshire kthimin e", Text = "P9 Note kredie ose fatura me shuma negative, te leshuara per nje sere arsyesh,perfshire kthimin e" },
                                new { Value = "P10 Faturimi korrigjues(anullimi/korrigjimi i nje  fature)", Text = "P10 Faturimi korrigjues(anullimi/korrigjimi i nje  fature)" },
                                new { Value = "P11 Faturimi i pjesshem dhe perfundimtar", Text = "P11 Faturimi i pjesshem dhe perfundimtar" },
                            }, "Value", "Text"), "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate")
                        </td>
                    </tr>

                    <tr>
                        <td>@Html.Label("Monedha:")</td>
                        <td>@Html.TextBoxFor(model => model.PAIDCUR, new { @Value = ViewBag.p7 })</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("Shuma e Paguar:")</td>
                        <td>@Html.TextBoxFor(model => model.PAIDAMT, new { @Value = ViewBag.p6 })</td>
                    </tr>

                    <tr>
                        <td>@Html.Label("IBAN & SWIFT:")</td>
                        <td>@Html.TextBoxFor(model => model.IBANNR, new { @Value = ViewBag.p8 })</td>
                        <td>@Html.TextBoxFor(model => model.BANKNAME, new { @Value = ViewBag.p10 })</td>
                    </tr>

                    <!-- Hidden input fields for properties not on the form -->
                    @Html.HiddenFor(model => model.QRCODEVAL, new { Value = "1" })
                    @Html.HiddenFor(model => model.STPROFILE, new { Value = "1" })
                    @Html.HiddenFor(model => model.PYMTDATTIM, new { Value = "1" })
                    @Html.HiddenFor(model => model.EINFIC, new { Value = "1" })
                    @Html.HiddenFor(model => model.BANKNIPT, new { Value = "1" })
                    @Html.HiddenFor(model => model.DATTIMSEND, new { Value = "1" })
                    @Html.HiddenFor(model => model.OVERPAIDAMT, new { Value = "1" })
                    @Html.HiddenFor(model => model.PYMTSTATUS, new { Value = "1" })
                    @Html.HiddenFor(model => model.CODE, new { Value = "1" })
                    @Html.HiddenFor(model => model.MESSAGE, new { Value = "1" })
                    @Html.HiddenFor(model => model.USR, new { Value = "1" })
                    @Html.HiddenFor(model => model.SWIFTNR, new { Value = "1" })
                </table>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Ruaj" class="btn btn-default" />
                        <input type="reset" value="Skanim i Ri" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>

        <div class="popup" id="popupWindow" style="display: none;">
            <h3>Saved Data</h3>
            <p> @ViewBag.savedData</p>
        </div>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

        <script>
            $(document).ready(function () {
                // Add an event listener for the "Search by REFCODE" button
                $("#searchByRefcode").click(function () {
                    var refcode = $("#REFCODE").val();
                    if (refcode !== "") {
                        $.post("/Fiscalization/SearchByRefcode", { REFCODE: refcode }, function (data) {
                            $("#resultTable").html(data);
                            $("#resultTable").show();
                            // Show the fixed table wrapper
                            $(".table-wrapper").show();
                        });
                    }
                });

                // Add an event listener for the first search box
                $("input[name='searchBox']").on("input", function () {
                    var searchTerm = $(this).val();
                    $("#freezeSearchBox").text(searchTerm).show();
                });
            });

            // Function to delete row
            function deleteRow() {
                if (confirm("Are you sure you want to delete this row?")) {
                    // Add your delete logic here
                }
            }
        </script>
    </div>
</body>
</html>
