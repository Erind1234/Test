the update part in the controller

 [HttpPost]
        public ActionResult UpdateFiscalization(EmpModel updatedEmp)
        {
            try
            {
                // Use the EmpRepository to update the row in the database
                bool isUpdated = empRepo.UpdateFiscalization(updatedEmp);

                if (isUpdated)
                {
                    // Redirect back to the Index view after successful update
                    return RedirectToAction("Index");
                }
                else
                {
                    ViewBag.Message = "Failed to update fiscalization details";
                    return View("Details", updatedEmp);
                }
            }
            catch (Exception ex)
            {
                ViewBag.Error = "An error occurred: " + ex.Message;
                return View("Details", updatedEmp);
            }
        }


THe EmpRepository code for update
  public bool UpdateFiscalization(EmpModel emp)
        {
            connection();
            con.Open();

            SqlCommand com = new SqlCommand("UPDATE [dbo].[Fiscalizimi] SET REFCODE=@REFCODE,  DATTIMSEND = @DATTIMSEND,BANKNIPT = @BANKNIPT,PYMTORDNUM = @PYMTORDNUM,PAYERNIPT = @PAYERNIPT,EINFIC = @EINFIC,PYMTDATTIM = @PYMTDATTIM,PAIDAMT = @PAIDAMT,OVERPAIDAMT = @OVERPAIDAMT,PAIDCUR = @PAIDCUR,TRANSACTIONCODE = @TRANSACTIONCODE,PYMTTYPE = @PYMTTYPE,PYMTSTATUS = @PYMTSTATUS,CODE = @CODE,MESSAGE = @MESSAGE,USR = @USR,SELLERNIPT = @SELLERNIPT,INVOICEDATE = @INVOICEDATE,IBANNR = @IBANNR,SWIFTNR = @SWIFTNR,BANKNAME = @BANKNAME,QRCODEVAL = @QRCODEVAL,NIVF = @NIVF,STPROFILE = @STPROFILE WHERE ID = @ID", con);
            // Set the parameters for the UPDATE query
            com.Parameters.AddWithValue("@REFCODE", emp.REFCODE);
            com.Parameters.AddWithValue("@PYMTORDNUM", emp.PYMTORDNUM);
            // Add other parameters as needed
            com.Parameters.AddWithValue("@ID", emp.ID);
          
            com.Parameters.AddWithValue("@DATTIMSEND", emp.DATTIMSEND);
            com.Parameters.AddWithValue("@BANKNIPT", emp.BANKNIPT);
            com.Parameters.AddWithValue("@PAYERNIPT", emp.PAYERNIPT);
            com.Parameters.AddWithValue("@EINFIC", emp.EINFIC);
            com.Parameters.AddWithValue("@PYMTDATTIM", emp.PYMTDATTIM);
            com.Parameters.AddWithValue("@PAIDAMT", emp.PAIDAMT);
            com.Parameters.AddWithValue("@OVERPAIDAMT", emp.OVERPAIDAMT);
            com.Parameters.AddWithValue("@PAIDCUR", emp.PAIDCUR);
            com.Parameters.AddWithValue("@TRANSACTIONCODE", emp.TRANSACTIONCODE);
            com.Parameters.AddWithValue("@PYMTTYPE", emp.PYMTTYPE);
            com.Parameters.AddWithValue("@PYMTSTATUS", emp.PYMTSTATUS);
            com.Parameters.AddWithValue("@CODE", emp.CODE);
            com.Parameters.AddWithValue("@MESSAGE", emp.MESSAGE);
            com.Parameters.AddWithValue("@USR", emp.USR);
            com.Parameters.AddWithValue("@SELLERNIPT", emp.SELLERNIPT);
            com.Parameters.AddWithValue("@INVOICEDATE", emp.INVOICEDATE);
            com.Parameters.AddWithValue("@IBANNR", emp.IBANNR);
            com.Parameters.AddWithValue("@SWIFTNR", emp.SWIFTNR);
            com.Parameters.AddWithValue("@BANKNAME", emp.BANKNAME);
            com.Parameters.AddWithValue("@QRCODEVAL", emp.QRCODEVAL);
            com.Parameters.AddWithValue("@NIVF", emp.NIVF);
            com.Parameters.AddWithValue("@STPROFILE", emp.STPROFILE);

            int i = com.ExecuteNonQuery();
            con.Close();
            if (i >= 1)
            {
                return true;
            }
            else
            {
                return false;
            }
        }


    }


and the view code
@model InApps.Models.EmpModel

<h1>Fiscalization Details</h1>


<body>
    <h1>Fiscalization</h1>



   



    <div class="fixed-table">
      

                <div style="display: flex; justify-content: center; align-items: center; height: 50vh;">

                    <div style="text-align: center; background-color: #e7e7ff;">


                        <table>
                            

                            <tr>
                                <td>@Html.Label("Numri Urdhrit")</td>
                                <td>@Html.TextBox("PYMTORDNUM")</td>
                                <td>@Html.Label("Invoice Date:")</td>
                                <td>@Html.TextBoxFor(model => model.INVOICEDATE, new { @Value = Model.INVOICEDATE })</td>
                            </tr>

                            <tr>
                                <td>@Html.LabelFor(model => model.NIVF)</td>
                                <td>@Html.TextBoxFor(model => model.NIVF, new { @Value = Model.NIVF, style = "width:400px;" })</td>

                            </tr>


                            <tr>
                                <td>@Html.Label("NIPT Bleres:")</td>
                                <td>@Html.TextBox("PAYERNIPT")</td>
                                <td>@Html.LabelFor(model => model.SELLERNIPT)</td>
                                <td>@Html.TextBoxFor(model => model.SELLERNIPT, new { @Value = Model.SELLERNIPT })</td>
                            </tr>
                            <tr>
                                <td>@Html.Label("Emri Shites")</td>
                                <td>@Html.TextBoxFor(model => model.TRANSACTIONCODE, new { @Value = Model.TRANSACTIONCODE, style = "width:400px;" })</td>
                            </tr>


                            <tr>
                                <td>@Html.Label("Referenca e Teller:")</td>
                                <td>@Html.TextBoxFor(model => model.REFCODE, new { @Value = Model.REFCODE })</td>
                               
                            </tr>






                            <tr>
                                <td>@Html.Label("Tipi i Pageses:")</td>
                                <td>
                                    @Html.DropDownListFor(model => model.PYMTTYPE, new SelectList(new[]
                     {
                                        new { Value = "CASH", Text = "CASH" },
                                        new { Value = "NON_CASH", Text = "NON_CASH" }
                                    }, "Value", "Text"), "CASH")
                                </td>

                            </tr>
                            <tr>
                                <td>@Html.Label("Statusi i Pageses:")</td>

                                <td>
                                    @Html.DropDownListFor(model => model.PYMTSTATUS, new SelectList(new[]
                     {
                                        new { Value = "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate", Text = "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate" },
                                        new { Value = "P2 Faturimi i dergesave te mallrave dhe sherbimeve bazuar ne nje kontrate", Text = "P2 Faturimi i dergesave te mallrave dhe sherbimeve bazuar ne nje kontrate" },
                                        new { Value = "P3 Faturimi i dorezimit te porosise se blerjes se  rastesishme", Text = "P3 Faturimi i dorezimit te porosise se blerjes se  rastesishme" },
                                        new { Value = "P4 Pagesa paraprake", Text = "P4 Pagesa paraprake" },
                                        new { Value = "P5 Pagesa ne vend", Text = "P5 Pagesa ne vend" },
                                        new { Value = "P6 Pagesa para dorezimit", Text = "P6 Pagesa para dorezimit" },
                                        new { Value = "P7 Faturat me referenca ne shenimin e dergimit", Text = "P7 Faturat me referenca ne shenimin e dergimit" },
                                        new { Value = "P8 Faturat me referenca ne shenimin e dergimit dhe shenimin e marrjes", Text = "P8 Faturat me referenca ne shenimin e dergimit dhe shenimin e marrjes" },
                                        new { Value = "P9 Note kredie ose fatura me shuma negative, te leshuara per nje sere arsyesh,perfshire kthimin e", Text = "P9 Note kredie ose fatura me shuma negative, te leshuara per nje sere arsyesh,perfshire kthimin e" },

                                        new { Value = "P10 Faturimi korrigjues(anullimi/korrigjimi i nje  fature)", Text = "P10 Faturimi korrigjues(anullimi/korrigjimi i nje  fature)" },
                                        new { Value = "P11 Faturimi i pjesshem dhe perfundimtar", Text = "P11 Faturimi i pjesshem dhe perfundimtar" },

                                    }, "Value", "Text"), "P1 Faturimi i dergesave te mallrave dhe sherbimeve kundrejt porosive te blerjes,bazuar ne  kontrate")
                                </td>
                            </tr>



                            <tr>
                                <td>@Html.Label("Monedha:")</td>
                                <td>@Html.TextBoxFor(model => model.PAIDCUR)</td>
                            </tr>

                            <tr>
                                <td>@Html.Label("Shuma e Paguar:")</td>
                                <td>@Html.TextBoxFor(model => model.PAIDAMT)</td>
                            </tr>


                            <tr>
                                <td>@Html.Label("IBAN & SWIFT:")</td>
                                <td>@Html.TextBoxFor(model => model.IBANNR)</td>
                                <td>@Html.TextBoxFor(model => model.BANKNAME)</td>
                            </tr>


                            <tr>
                                <td>&nbsp;</td>

                            </tr>
                            <tr>
                                <td>&nbsp;</td>

                            </tr>

                        </table>




                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">


                                <input type="submit" value="Ruaj" class="btn btn-default" />

                               


                            </div>
                        </div>
                    </div>
                </div>



        <!-- Add the "Update" button -->
        @using (Html.BeginForm("UpdateFiscalization", "Fiscalization", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.ID)
            <input type="submit" value="Update" />
        }



