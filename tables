@model List<InApps.Models.EmpModel>

<!DOCTYPE html>
<html>
<head>
    <title>Popup</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        /* CSS styles (unchanged) */
    </style>
</head>

<body>
    <div class="popup-container">
        <div class="popup-content">
            <span class="close-button">&times;</span>
            <h2>Saved Fiscalization Details</h2>
            <table style="border-collapse: collapse;">
                <tr>
                    <th style="border: 1px solid black; padding: 8px;"></th>
                    <th style="border: 1px solid black; padding: 8px;">ID</th>
                    <th style="border: 1px solid black; padding: 8px;">User</th>
                    <th style="border: 1px solid black; padding: 8px;">Referenca</th>
                    <th style="border: 1px solid black; padding: 8px;">Nr urdher</th>
                    <th style="border: 1px solid black; padding: 8px;">NIPT Bleres</th>
                    <th style="border: 1px solid black; padding: 8px;">NIVF</th>
                    <th style="border: 1px solid black; padding: 8px;">Shuma</th>
                    <th style="border: 1px solid black; padding: 8px;">Monedha</th>
                    <th style="border: 1px solid black; padding: 8px;">Shitesi</th>
                    <th style="border: 1px solid black; padding: 8px;">Lloji</th>
                    <th style="border: 1px solid black; padding: 8px;">Nipt Shites</th>
                </tr>
                @foreach (var emp in Model)
                {
                    <tr>
                        <td style="border: 1px solid black; padding: 8px;"></td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.ID</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.USR</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.REFCODE</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.PYMTORDNUM</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.PAYERNIPT</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.NIVF</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.PAIDAMT</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.PAIDCUR</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.TRANSACTIONCODE</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.PYMTTYPE</td>
                        <td style="border: 1px solid black; padding: 8px;">@emp.SELLERNIPT</td>
                        <td><a href="#" onclick="editRow(@emp.ID)">Edit</a></td>
                        <td><a href="#" onclick="deleteRow(@emp.ID)">Delete</a></td>
                    </tr>
                }
            </table>


            <script>
    function editRow(id) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditFiscalization", "Fiscalization")",
            data: { ID: id },
            success: function (data) {
                // Assuming you have a "EditFiscalization.cshtml" view for editing the row
                $("#editFormContainer").html(data);
            },
            error: function () {
                alert("Failed to load edit form.");
            }
        });
    }

    function deleteRow(id) {
        if (confirm("Are you sure you want to delete this row?")) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteFiscalization", "Fiscalization")",
                data: { ID: id },
                success: function () {
                    // Reload the popup view to show the updated list
                    location.reload();
                },
                error: function () {
                    alert("Failed to delete the row.");
                }
            });
        }
    }
            </script>
        </div>
    </div>
</body>
</html>



using InApps.Models;
using System;
using System.Web.Mvc;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Data;

using static InApps.Models.Fiscal;
using static InApps.Models.FiscalLog;

using System.Linq;
using System.Collections;
using InApps.Repository;
using System.Web;

namespace InApps.Controllers
{


    public class FiscalizationController : Controller
    {

        private EmpRepository empRepo;

        public FiscalizationController()
        {
            empRepo = new EmpRepository();
        }


        //public ActionResult Index()
        //{
        //    return View();

        //}


        public ActionResult Index()
        {
            EmpModel emp = new EmpModel();

            return View(emp);

        }



        private const string connectionString = "FacilegalConn";
        [HttpGet]
        public ActionResult AddFiscalization()
        {
            return View();
        }


        [HttpPost]
        public ActionResult Index(string searchBox)
        {
            try
            {
                string[] splitValues = searchBox.Split(';');

                // Assign split values to ViewBag variables
                ViewBag.p1 = splitValues.Length > 0 ? splitValues[0] : string.Empty;
                ViewBag.p2 = splitValues.Length > 1 ? splitValues[1] : string.Empty;
                ViewBag.p3 = splitValues.Length > 2 ? splitValues[2] : string.Empty;
                ViewBag.p4 = splitValues.Length > 3 ? splitValues[3] : string.Empty;
                ViewBag.p5 = splitValues.Length > 4 ? splitValues[4] : string.Empty;
                ViewBag.p6 = splitValues.Length > 5 ? splitValues[5] : string.Empty;
                ViewBag.p7 = splitValues.Length > 6 ? splitValues[6] : string.Empty;
                ViewBag.p8 = splitValues.Length > 7 ? splitValues[7] : string.Empty;
                ViewBag.p9 = splitValues.Length > 8 ? splitValues[8] : string.Empty;
                ViewBag.p10 = splitValues.Length > 9 ? splitValues[9] : string.Empty;


                return View("");
            }
            catch (Exception ex)
            {
                ViewBag.Error = "An error occurred: " + ex.Message;
                return View();
            }
        }


        [HttpPost]
        public ActionResult SaveFiscalization(string QRCODEVAL, string IBANNR, string STPROFILE, string REFCODE, string PYMTORDNUM, string PAYERNIPT, string EINFIC, string PAIDAMT, string PAIDCUR, string TRANSACTIONCODE, string PYMTTYPE, string BANKNAME, string NIVF, string INVOICEDATE)
        {
            try
            {

                EmpModel emp = new EmpModel();

                emp.QRCODEVAL = "Null";
                emp.STPROFILE = "Null";
                emp.NIVF = NIVF;
                emp.REFCODE = REFCODE;
                emp.PYMTORDNUM = PYMTORDNUM;
                emp.PAYERNIPT = PAYERNIPT;
                emp.EINFIC = "Null";
                emp.PAIDAMT = PAIDAMT;
                emp.PAIDCUR = PAIDCUR;
                emp.TRANSACTIONCODE = TRANSACTIONCODE;
                emp.PYMTTYPE = "Null";
                emp.BANKNIPT = "Null";
                emp.DATTIMSEND = "Null";
                emp.PYMTDATTIM = "Null";
                emp.OVERPAIDAMT = "Null";
                emp.PYMTSTATUS = "Null";
                emp.CODE = "Null";
                emp.MESSAGE = "Null";
                emp.USR = "Null";
                emp.SELLERNIPT = "Null";
                emp.INVOICEDATE = INVOICEDATE;
                emp.IBANNR = IBANNR;
                emp.SWIFTNR = "Null";
                emp.BANKNAME = "BANKNAME";
                bool isAdded = empRepo.SaveFiscalization(emp);


                //if (isAdded)
                //    //{

                    //// Set the ViewBag.savedData to display the saved row data in the popup window
                    //string tableHtml = "<table style='border-collapse: collapse;'>" +
                    //                   "<tr>" +
                    //                    "<th style='border: 1px solid black; padding: 8px;'></th>" +

                    //                   "<th style='border: 1px solid black; padding: 8px;'>ID</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>User</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>Referenca</th>" +
                    //                      "<th style='border: 1px solid black; padding: 8px;'>Nr urdher</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>NIPT Bleres</th>" +

                    //                      "<th style='border: 1px solid black; padding: 8px;'>NIVF</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>Shuma</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>Monedha</th>" +
                    //                      "<th style='border: 1px solid black; padding: 8px;'>Shitesi</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>Lloji</th>" +
                    //                   "<th style='border: 1px solid black; padding: 8px;'>Nipt Shites</th>" +
                    //                   "</tr>" +
                    //                   "<tr>" +
                    //                    "<td style='border: 1px solid black; padding: 8px;'><button onclick='editTable()'>Edit</button></td>" +

                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.id + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.USR + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.REFCODE + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.PYMTORDNUM + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.PAYERNIPT + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.NIVF + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.PAIDAMT + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.PAIDCUR + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.TRANSACTIONCODE + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.PYMTTYPE + "</td>" +
                    //                   "<td style='border: 1px solid black; padding: 8px;'>" + emp.SELLERNIPT + "</td>" +
                    //                   "</tr>" +
                    //                   "</table>";

                    //            //ViewBag.savedData = new HtmlString(tableHtml);

                    if (isAdded)
                    {
                    List<EmpModel> empList = new List<EmpModel> { emp }; // Wrap the emp instance in a list
                    return View("Popup", empList);
                    //ViewBag.savedData = new HtmlString(tableHtml);
                   
                    }
                    else
                    {
                        ViewBag.Message = "Failed to save fiscalization details";
                    }

                return View("Popup");
            }
            catch (Exception ex)
            {
                ViewBag.Error = "An error occurred: " + ex.Message;
                return View("Index");
            }
        }
        // FiscalizationController.cs
        public ActionResult EditFiscalization(int ID)
        {
            EmpModel emp = empRepo.GetEmpModelById(ID);
            if (emp == null)
            {
                return HttpNotFound();
            }
            return PartialView("EditFiscalization", emp);
        }

        [HttpPost]
        public ActionResult UpdateFiscalization(EmpModel emp)
        {
            try
            {
                bool isUpdated = empRepo.UpdateFiscalization(emp);

                if (isUpdated)
                {
                    return RedirectToAction("Index");
                }
                else
                {
                    ViewBag.Message = "Failed to update fiscalization details";
                }
            }
            catch (Exception ex)
            {
                ViewBag.Error = "An error occurred: " + ex.Message;
            }

            return PartialView("EditFiscalization", emp);
        }

        [HttpPost]
        public ActionResult DeleteFiscalization(int ID)
        {
            try
            {
                // Implement logic to delete the row with the given ID from the database
                // For example:
                // empRepo.DeleteFiscalization(ID);
                return Json(new { success = true });
            }
            catch (Exception ex)
            {
                return Json(new { success = false, message = "Failed to delete the row." });
            }
        }





    }
}















































